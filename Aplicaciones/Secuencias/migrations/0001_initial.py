# Generated by Django 4.2.7 on 2025-06-15 00:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("Protocolo_Muestras", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("Protocolo_Metodos", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Sistema",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nombre",
                    models.CharField(max_length=250, null=True, verbose_name="Sistema"),
                ),
                (
                    "condicion",
                    models.CharField(
                        choices=[("Activo", "ACTIVO"), ("Pasivo", "PASIVO")],
                        default="Activo",
                        max_length=90,
                        verbose_name="Condicion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="usuario_validar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="usuario_reporte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="usuario_invalidar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="usuario_impresion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="usuario_auditor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Secuencias",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombre", models.CharField(max_length=250, verbose_name="Nombre")),
                ("fecha_Inicio", models.DateTimeField(verbose_name="Fecha de Inicio")),
                (
                    "fecha_Final",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Finalización"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Registrada", "REGISTRADA"),
                            ("Invalida", "INVALIDA"),
                            ("Revisada", "REVISADA"),
                            ("Impresa", "IMPRESA"),
                            ("Reportada", "REPORTADA"),
                            ("Auditada", "AUDITADA"),
                            ("Ensayo", "ENSAYO"),
                        ],
                        default="Registrada",
                        max_length=90,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                (
                    "invalidar_Secuencia",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Problemas de equipo (Equipo presionado, Linea base defectuosa)",
                                "PROBLEMAS_EQUIPO_1",
                            ),
                            (
                                "Problemas de equipo (Otros: Caidas de presión, Picos fantasmas; Problemas de software/hadware...)",
                                "PROBLEMAS_EQUIPO_2",
                            ),
                            ("Problemas de columna", "PROBLEMAS_COLUMNA"),
                            ("Incumplimiento de System (RSD)", "INCUMPLIMIENTO_SST_1"),
                            (
                                "Incumplimiento de System (Otros: Resolución, Asimetria, Platos teóricos, Señal ruido)",
                                "INCUMPLIMIENTO_SST_2",
                            ),
                            (
                                "Incumplimiento de System (Correlación)",
                                "INCUMPLIMIENTO_SST_3",
                            ),
                            (
                                "Problemas de Fases Móviles (TR Corridos, FM saturada, Otros...)",
                                "PROBLEMAS_DE_FASE_MOVIL",
                            ),
                            ("Problemas de red", "PROBLEMAS_RED"),
                            (
                                "Fallas de Fluido Eléctrico",
                                "PROBLEMAS_DE_FLUIDO_ELECTRICO",
                            ),
                            ("Otros (definir en observaciones)", "OTROS"),
                        ],
                        max_length=250,
                        null=True,
                        verbose_name="Invalidar Secuencia",
                    ),
                ),
                (
                    "condicion",
                    models.CharField(
                        blank=True,
                        choices=[("Activo", "ACTIVO"), ("Pasivo", "PASIVO")],
                        default="Activo",
                        max_length=90,
                        null=True,
                        verbose_name="Condicion",
                    ),
                ),
                (
                    "observaciones",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                (
                    "fecha_invalidar",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Invalidéz"
                    ),
                ),
                (
                    "fecha_configuracion_protocolo_metodo",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha Configuracion Protocolo de Metodo",
                    ),
                ),
                (
                    "fecha_configuracion_protocolo_proceso",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha Configuracion Protocolo de Proceso",
                    ),
                ),
                (
                    "fecha_validar",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Validación"
                    ),
                ),
                (
                    "fecha_impresion",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Impresión"
                    ),
                ),
                (
                    "fecha_reporte",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha de Reporte"
                    ),
                ),
                (
                    "fecha_auditada",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Fecha auditada"
                    ),
                ),
                (
                    "invalidar",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Invalidada por",
                    ),
                ),
                (
                    "validar",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Validada por",
                    ),
                ),
                (
                    "imprimir",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Impresa"
                    ),
                ),
                (
                    "reportar",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Reportada por",
                    ),
                ),
                (
                    "auditar",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Auditada por",
                    ),
                ),
                (
                    "metodo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Protocolo_Metodos.metodo",
                        verbose_name="Metodo",
                    ),
                ),
                (
                    "muestras",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Protocolo_Metodos.muestras_y_placebos",
                        verbose_name="Muestras",
                    ),
                ),
                (
                    "parametro_sq",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Protocolo_Metodos.parametro",
                        verbose_name="Parametro",
                    ),
                ),
                (
                    "protocolo",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Protocolo_Metodos.protocolos",
                        verbose_name="Protocolo",
                    ),
                ),
                (
                    "protocolo_proceso",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Protocolo_Muestras.proceso",
                        verbose_name="Protocolo de Proceso",
                    ),
                ),
                (
                    "sistema",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Secuencias.sistema",
                        verbose_name="Sistema",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Lavado_buzo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fecha_lavado_buzo",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de lavado de buzos"
                    ),
                ),
                (
                    "fecha_lavado_celda",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de lavado de celda"
                    ),
                ),
                (
                    "fecha_test_diagnostico",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha del test"
                    ),
                ),
                (
                    "fecha_mantenimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha del Mantenimiento"
                    ),
                ),
                (
                    "fecha_calificacion",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de la calificación"
                    ),
                ),
                (
                    "fecha_alerta_inferior",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de alerta inferior"
                    ),
                ),
                (
                    "fecha_alerta_superior",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de alerta superior"
                    ),
                ),
                (
                    "fecha_alerta_inferior_celda",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta inferior celda",
                    ),
                ),
                (
                    "fecha_alerta_superior_celda",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta superior celda",
                    ),
                ),
                (
                    "fecha_alerta_inferior_test",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta inferior test",
                    ),
                ),
                (
                    "fecha_alerta_superior_test",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta superior test",
                    ),
                ),
                (
                    "fecha_alerta_inferior_mantenimiento",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta inferior mantenimiento",
                    ),
                ),
                (
                    "fecha_alerta_superior_mantenimiento",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta superior mantenimiento",
                    ),
                ),
                (
                    "fecha_alerta_inferior_calificacion",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta inferior calificación",
                    ),
                ),
                (
                    "fecha_alerta_superior_calificacion",
                    models.DateField(
                        blank=True,
                        null=True,
                        verbose_name="Fecha de alerta superior calificación",
                    ),
                ),
                (
                    "condicion",
                    models.CharField(
                        choices=[("Activo", "ACTIVO"), ("Pasivo", "PASIVO")],
                        default="Activo",
                        max_length=90,
                        verbose_name="Condicion",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Programado", "PROGRAMADO"),
                            ("Realizado", "REALIZADO"),
                            ("Pendiente", "PENDIENTE"),
                        ],
                        default="Programado",
                        max_length=90,
                        null=True,
                        verbose_name="Status Buzos",
                    ),
                ),
                (
                    "status_celda",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Programado", "PROGRAMADO"),
                            ("Realizado", "REALIZADO"),
                            ("Pendiente", "PENDIENTE"),
                        ],
                        default="Programado",
                        max_length=90,
                        null=True,
                        verbose_name="Status Celdas",
                    ),
                ),
                (
                    "status_test",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Programado", "PROGRAMADO"),
                            ("Realizado", "REALIZADO"),
                            ("Pendiente", "PENDIENTE"),
                        ],
                        default="Programado",
                        max_length=90,
                        null=True,
                        verbose_name="Status Test",
                    ),
                ),
                (
                    "status_mantenimiento",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Programado", "PROGRAMADO"),
                            ("Realizado", "REALIZADO"),
                            ("Pendiente", "PENDIENTE"),
                        ],
                        default="Programado",
                        max_length=90,
                        null=True,
                        verbose_name="Status Mantenimiento",
                    ),
                ),
                (
                    "status_calificacion",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Programado", "PROGRAMADO"),
                            ("Realizado", "REALIZADO"),
                            ("Pendiente", "PENDIENTE"),
                        ],
                        default="Programado",
                        max_length=90,
                        null=True,
                        verbose_name="Status Calificación",
                    ),
                ),
                (
                    "realizado_por",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Lavado de buzos realizados por",
                    ),
                ),
                (
                    "realizado_por_celda",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Lavado de celda realizado por",
                    ),
                ),
                (
                    "realizado_por_test",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Test realizado por",
                    ),
                ),
                (
                    "realizado_por_mantenimiento",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Mantenimiento realizado por",
                    ),
                ),
                (
                    "realizado_por_calificacion",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Calificado por",
                    ),
                ),
                (
                    "observaciones",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Observaciones",
                    ),
                ),
                (
                    "sistema",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Secuencias.sistema",
                        verbose_name="Sistema",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="secuencias",
            constraint=models.UniqueConstraint(
                fields=(
                    "protocolo",
                    "parametro_sq",
                    "fecha_configuracion_protocolo_metodo",
                ),
                name="unique",
            ),
        ),
        migrations.AddConstraint(
            model_name="secuencias",
            constraint=models.UniqueConstraint(
                fields=(
                    "protocolo_proceso",
                    "muestras",
                    "fecha_configuracion_protocolo_proceso",
                ),
                name="unique_intro_nue",
            ),
        ),
    ]
